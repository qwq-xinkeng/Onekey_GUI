name: Build and Release Executable

on:
  # 当一个 Release 被创建、发布或标记为预发布时触发 (推荐方式)
  release:
    types: [published] 

  # 保留手动触发工作流的选项
  workflow_dispatch:

jobs:
  build:
    name: Build on Windows
    runs-on: windows-latest

    env:
      SCRIPT_MAIN_NAME: main.py
      OUTPUT_NAME: OneKey-GUI
      ICON_FILE: icon.ico

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          pip install -r requirements.txt
        shell: bash

      - name: Run Nuitka
        run: |
          nuitka --onefile `
                 --output-filename=${{ env.OUTPUT_NAME }} `
                 --output-dir=dist `
                 --assume-yes-for-downloads `
                 --include-data-dir=./web/templates=web/templates `
                 --include-data-files=${{ env.ICON_FILE }}=${{ env.ICON_FILE }} `
                 --windows-icon-from-ico=${{ env.ICON_FILE }} `
                 --include-data-dir=./web/static=web/static `
                 "${{ env.SCRIPT_MAIN_NAME }}"
        shell: powershell

      - name: Package executable into a zip file
        run: |
          $zipFileName = "${{ env.OUTPUT_NAME }}-${{ github.ref_name }}.zip"
          Compress-Archive -Path dist/${{ env.OUTPUT_NAME }}.exe -DestinationPath $zipFileName
          echo "ASSET_PATH=$zipFileName" >> $env:GITHUB_ENV
        shell: powershell

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET_PATH }}
          name:  ${{ github.ref_name }}
          body: |
            Automated release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
